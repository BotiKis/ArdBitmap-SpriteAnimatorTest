#include <Arduboy2.h>
Arduboy2 arduboy;

#define ARDBITMAP_SBUF arduboy.sBuffer
#include <ArdBitmap.h>
ArdBitmap<WIDTH, HEIGHT> ardbitmap;

#include "SpriteAnimator.h"

#define gameloop while(1)

const unsigned char PROGMEM CHAR_IDLE_01[] ={
0x1f, 0xdf, 0x9f, 0x76, 0xa5, 0x99, 0xb6, 0xae, 0x9e, 0xd6, 0xa0, 0xeb, 0xb2, 0x6a, 0xc7, 0x70,
0x14, 0xa6, 0x6c, 0x7f, 0xbe, 0xc7, 0xd1, 0x7a, 0x65, 0x0e, 0x33, 0x06, 0x63, 0x6a, 0xa1, 0xd0,
0x86, 0xed, 0x0f, 0x76, 0x41, 0xca, 0xc4, 0x66, 0xe4, 0xc8, 0x66, 0xb1, 0x09, 0xb2, 0x59, 0x6c,
0x16, 0x09, 0x4c, 0x41, 0xd1, 0xe1, 0xaf, 0x9e, 0x1d, 0x34, 0xcb, 0xc1, 0x3e, 0xe5, 0x5d, 0x3c,
0x68, 0x1a, 0x3d, 0x18, 0xfd, 0x18,
};

const unsigned char PROGMEM CHAR_IDLE_02[] ={
0x1f, 0x9f, 0x9f, 0x76, 0xb9, 0x5c, 0xb6, 0xeb, 0x32, 0xf7, 0xde, 0x7b, 0xef, 0xc3, 0xda, 0x52,
0x92, 0x3f, 0x07, 0xd3, 0xd6, 0x33, 0x5d, 0xcd, 0x18, 0x99, 0x5a, 0xb8, 0x00, 0x59, 0x47, 0xe1,
0x87, 0x5a, 0x61, 0x91, 0x48, 0xc8, 0xcc, 0x99, 0x72, 0xa1, 0x5c, 0x28, 0x17, 0xca, 0x22, 0x0c,
0x10, 0x00, 0x2d, 0x10, 0x7f, 0xf0, 0x1e, 0xda, 0x2c, 0x16, 0x97, 0x3d, 0x6e, 0x9e, 0x33, 0xc3,
0x45, 0x1d, 0x51, 0x69, 0xa3, 0x1f, 0x01,
};

const unsigned char PROGMEM CHAR_WALK_01[] ={
0x1f, 0x9f, 0x1f, 0x57, 0x2f, 0xea, 0xae, 0xd7, 0xdc, 0x5a, 0x57, 0x97, 0x6d, 0xc1, 0xe1, 0x70,
0x68, 0x42, 0xfe, 0x14, 0xe3, 0xb0, 0x3d, 0x63, 0x77, 0x18, 0xb3, 0xb8, 0x61, 0xc1, 0x48, 0x26,
0x93, 0x1f, 0x3c, 0x82, 0x5b, 0xb2, 0x62, 0xca, 0x62, 0xb3, 0xd8, 0x2c, 0x1a, 0x58, 0x6c, 0x16,
0x49, 0x34, 0x2c, 0xc4, 0xfe, 0x49, 0x92, 0x01, 0xd4, 0xab, 0xdb, 0x99, 0xcb, 0xaf, 0x02,
};

const unsigned char PROGMEM CHAR_WALK_02[] ={
0x1f, 0x9f, 0x1f, 0x97, 0x5c, 0xc6, 0xe5, 0xc4, 0xe6, 0x6a, 0x33, 0x5d, 0xad, 0xc5, 0x5c, 0xb2,
0xd0, 0xd8, 0x3f, 0xc4, 0x9c, 0x83, 0x7a, 0x86, 0x5c, 0xe6, 0x61, 0x5c, 0xa0, 0x50, 0x8c, 0xcb,
0x3f, 0xc2, 0x1e, 0xb2, 0x5c, 0xa2, 0xc0, 0xa6, 0x5c, 0x28, 0x74, 0x50, 0x2e, 0x94, 0x93, 0xc8,
0xee, 0xdf, 0x23, 0xb9, 0x5a, 0xaf, 0x49, 0xa2, 0x6e, 0x8f, 0x71, 0xe4, 0xfb,
};

const unsigned char PROGMEM CHAR_WALK_03[] ={
0x1f, 0x9f, 0x1f, 0x57, 0x2f, 0xea, 0xae, 0xd7, 0xdc, 0x5a, 0x57, 0x97, 0x6d, 0xc1, 0xe1, 0x70,
0x68, 0x42, 0xfe, 0x18, 0x9e, 0xa6, 0x07, 0x06, 0x76, 0x87, 0x31, 0x8b, 0x1b, 0x16, 0x8c, 0xe4,
0xcc, 0xdf, 0xe2, 0x62, 0xa8, 0xc6, 0x60, 0x81, 0xc5, 0x22, 0x94, 0xc5, 0x66, 0xb1, 0x10, 0xed,
0x5f, 0x66, 0x12, 0xb6, 0x65, 0x9b, 0xe5, 0xf1, 0xe8, 0xf6, 0xb2, 0xfc, 0x2e,
};




const unsigned char *CHAR_IDLE_ANIMATION[] = {
  CHAR_IDLE_01,
  CHAR_IDLE_02,
};

const unsigned char *CHAR_WALKING_ANIMATION[] = {
  CHAR_WALK_01,
  CHAR_WALK_02,
  CHAR_WALK_03,
  CHAR_WALK_02,
};

SpriteAnimator *idleAnimation;
SpriteAnimator *walkAnimation;

void setup() {
  arduboy.setFrameRate(60);
  arduboy.begin();
  arduboy.invert(true);

  idleAnimation = new SpriteAnimator(CHAR_IDLE_ANIMATION, 2);
  walkAnimation = new SpriteAnimator(CHAR_WALKING_ANIMATION, 4);
  walkAnimation->millisPerSprite = 350;
}

void loop() {
  if (!arduboy.nextFrame()) return;

  arduboy.clear();
  arduboy.pollButtons();

  static uint8_t mirror = MIRROR_NONE;

  if (arduboy.pressed(LEFT_BUTTON)) {
    mirror = MIRROR_HORIZONTAL;
    ardbitmap.drawCompressed(64, 32, walkAnimation->getCurrentSprite(), WHITE, ALIGN_CENTER, mirror);
  }
  else if(arduboy.pressed(RIGHT_BUTTON)){
    mirror = MIRROR_NONE;
    ardbitmap.drawCompressed(64, 32, walkAnimation->getCurrentSprite(), WHITE, ALIGN_CENTER, mirror);
  }
  else if (arduboy.pressed(UP_BUTTON) || arduboy.pressed(DOWN_BUTTON)) {
    ardbitmap.drawCompressed(64, 32, walkAnimation->getCurrentSprite(), WHITE, ALIGN_CENTER, mirror);
  }
  else{
    ardbitmap.drawCompressed(64, 32, idleAnimation->getCurrentSprite(), WHITE, ALIGN_CENTER, mirror);
  }

  arduboy.display();
}
